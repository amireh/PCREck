<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="description" 
          content="PCREck is an interface for writing, testing, and validating your PCRE regular expressions.">

    <title>PCREck - a PCRE regular expression checker</title>

    <script type="text/javascript" src="/js/jquery.1.7.1.min.js"></script>
    <% if has_proximanova? then %>
      <link href="/css/fonts/proximanova.css" rel="stylesheet" type="text/css" />
    <% end %>

    <script src="/js/jquery.autosize.js"></script>
    <script src="/js/dynamism.js"></script>
    <link href="/css/PCREck.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript">

      var reset_status = function(idx, text) {
        $( "[data-dyn-entity=subjects][data-dyn-index=" + idx + "] .match").empty().html(text || "");
        $( "[data-dyn-entity=subjects][data-dyn-index=" + idx + "] .capture").empty();
      }

      var test = function() {
        if ($("#PCREck_pattern").attr("value").length == 0) {
          reset_status();
          return;
        }

        var params = $("textarea:visible,input[type=text]:visible").serialize();

        $.ajax({
          url: "/mode/advanced",
          type: "POST",
          data: params,
          success: function(master_resultset) {
            master_resultset = JSON.parse(master_resultset);
            // console.log(master_resultset);

            $.each(master_resultset, function(subject_idx, result) {
              if (!result || result.length == 0) {
                reset_status(subject_idx, "No match.");
                return;
              }

              if (!result[0]) {
                reset_status(subject_idx, "Error: " + result[1]);
                return;
              }

              var subject = $("[data-dyn-entity=subjects][data-dyn-index=" + subject_idx + "]"),
                  match = subject.find(".match:first"),
                  capture = subject.find(".capture:first");

              var matched_subject = subject.find("textarea:first").attr("value");
              var match_begin = result[0] - 1, // subtract 1 because Lua starts indexes @ 1
                  match_end = result[1] - 1;

              matched_subject = matched_subject.split('');
              matched_subject[match_begin] = "<em>" + matched_subject[match_begin];
              matched_subject[match_end] = matched_subject[match_end] + "</em>";
              matched_subject = matched_subject.join('');
              matched_subject = matched_subject.replace(' ', "&nbsp;").replace(/\n/g, "&nbsp;<br />");

              match.html(matched_subject);
              capture.empty();
              for (var i = 2; i < result.length; ++i) {
                capture.append("  %" + (i-1) + " => " + result[i] + "\n");
              }

            });
          }
        });

        return false;
      };

      $(function() {
        var t = null;
        var pulse = 50;

        $("#gen_permalink").click(function() {
          var pattern = $("#PCREck_pattern").attr("value");
          var subject = $("#PCREck_subject").attr("value");
          var options = $("#PCREck_pattern_options").attr("value");

          if (pattern.length == 0 && subject.length == 0) {
            reset_status();
            return;
          }

          $.ajax({
            url: "/permalink",
            type: "POST",
            data: {
              pattern: pattern,
              subject: subject,
              options: options
            },
            success: function(url) {
              $("#permalink").html("Your regular expression can be viewed at: <a href='" + url + "'>" + url + "</a>");
            }
          });
        });

        var refresh = function() {
          if (t) { clearTimeout(t); }
          t = setTimeout("test()", pulse);
        }

        $("#PCREck input, #PCREck textarea").keyup(function() {
          refresh();
        });
        $("#PCRE_options input[type=checkbox]").change(function() {
          refresh();
        })

        // append or remove a toggled pattern option into the pattern option box
        $("#PCRE_options input[type=checkbox]").change(function() {
          var el = $(this);
          var opts = $("#PCREck_pattern_options");
          var curr_opts = opts.attr("value");
          if (el.is(":checked")) {
            opts.attr("value", curr_opts + el.attr("value"));
          } else {
            opts.attr("value", opts.attr("value").replace(el.attr("value"), ""));
          }
        })

        // update the pattern options' :checked state when the user
        // manually writes options in the pattern option box
        $("#PCREck_pattern_options").keyup(function() {
          var opts = $(this).attr("value").split('');
          $("#PCRE_options input[type=checkbox]").attr("checked", null);
          $("#PCRE_options input[type=checkbox]").each(function() {
            var this_opt = $(this).attr("value");
            if (opts.indexOf(this_opt) != -1)
              $(this).attr("checked", "checked");
          });
        });

        // force a test if the fields were initialized with a custom value
        var pattern = $("#PCREck_pattern").attr("value");
        var subject = $("#PCREck_subject").attr("value");
        if (pattern.length > 0 && subject.length > 0)
          test();

        $("textarea").autosize();

        dyn_register_callback(function(clone, action) {
          if (clone && action == "add") {
            var idx = clone.attr("data-dyn-index");
            if (idx % 2 != 0)
              clone.addClass("odd");

            clone.find("textarea").autosize();
            clone.find("textarea").keyup(function() {
              refresh();
            });
          }
        });

        $("#add_subject").click();
        $("#PCREck_pattern").attr("value", "foo(bar)");
        $("textarea[name^=subject]:visible:first").attr("value", "foobar");
        test();
      });

  
    </script>

    <%= erb :"_google_analytics" %>

  </head>
  <body>
    <header>
      <hgroup>
        <h1>PCRE<span style="color: orange">ck</span></h1>
      </hgroup>
      <p>
        PCREck is a <a href="http://www.pcre.org/pcre.txt">PCRE</a>
        regular expression editor and tester similar 
        to what <a href="http://www.rubular">Rubular</a> is
        for Ruby's regular expressions.
      </p>
    </header>
    <form>
    <section class="PCREck">
      <div class="part spanner">
        <label for="PCREck_pattern">Your regular expression:</label>
        <div class="part left" style="width: 120px; margin-right: 0">
          <code>(?</code>
          <input type="text" id="PCREck_pattern_options"
            name="options"
            style="width: 70px; font-size: 12px"
            placeholder="imsxUX"
            value="<%= @link.options %>" />
          <code>)</code>
        </div>
        <div class="part right" style="width: 840px; border-left: none">
         <textarea 
            id="PCREck_pattern"
            name="pattern"
            autofocus="autofocus"
            placeholder="^(banana)+s? (.*)$"><%= @link.pattern %></textarea>
        </div>
      </div>
    </section>
    <%= erb :"_options" %>
    <section class="PCREck" id="PCREck_subjects">

      <div class="PCREck_subject" data-dyn-entity="subjects">
        <h3>Subject #<span data-dyn-substitute="index"></span></h3>
        <div class="part spanner">
          <label>Your test string:</label>
          <textarea
            name="subjects[-1]"
            placeholder="bananas in the car"><%= @link.subject %></textarea>
          <!-- <button id="add_subject">Add another subject</button> -->
        </div>
        
        <div class="part spanner">
          <label>
            Matches:
          </label>
          <pre class="match">--</pre>
          <label>
            Captured subpatterns:
          </label>
          <pre class="capture">--</pre>

        </div>
      </div>
    </section>
    <button id="add_subject" data-dyn-target="subjects">Add another subject</button>
    </form>
    <section id="PCREck_actions">
      <button id="gen_permalink">Permanent link</button>
      <span id="permalink"></span>
    </section>

    <%= erb :"_cheatsheet" %>
    <%= erb :"_references" %>

    <footer>
      <small><a href="http://www.pcreck.com">PCREck</a> is free software.
        <a href="https://github.com/amireh/PCREck.git">Fork it</a> on Github,
        or pay its <a href="http://www.mxvt.net">author</a> a visit.
      </small>
    </footer>
  </body>
</html>