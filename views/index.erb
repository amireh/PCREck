<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="description" 
          content="PCREck is an interface for writing, testing, and validating your PCRE regular expressions.">

    <title>PCREck - a PCRE regular expression checker</title>

    <script type="text/javascript" src="/js/jquery.1.7.1.min.js"></script>
    <link href="/css/PCREck.css" rel="stylesheet" type="text/css" />
    <% if has_proximanova? then %>
      <link href="/css/fonts/proximanova.css" rel="stylesheet" type="text/css" />
    <% end %>

    <script type="text/javascript">

      var reset_status = function(text) {
        $("#PCREck_match").empty().html(text || "");
        $("#PCREck_capture").empty();
      }

      var test = function() {

        if ($("#PCREck_pattern").attr("value").length == 0) {
          reset_status();
          return;
        }

        $.ajax({
          url: "/",
          type: "POST",
          data: {
            pattern: "(?" + $("#PCREck_pattern_options").attr("value") + ")" + 
                     $("#PCREck_pattern").attr("value"),
            text: $("#PCREck_subject").attr("value")
          },
          success: function(PCREck_result) {
            if (!PCREck_result || PCREck_result.length == 0) {
              reset_status("No match.");
              return;
            }

            if (!PCREck_result[0]) {
              reset_status("Error: " + PCREck_result[1]);
              return;
            }

            var target = $("#PCREck_subject").attr("value");
            var match_begin = PCREck_result[0] - 1, // subtract 1 because Lua starts indexes @ 1
                match_end = PCREck_result[1] - 1;

            target = target.split('');
            target[match_begin] = "<em>" + target[match_begin];
            target[match_end] = target[match_end] + "</em>";
            target = target.join('');
            target = target.replace(' ', "&nbsp;").replace(/\n/g, "&nbsp;<br />");

            $("#PCREck_match").html(target);
            $("#PCREck_capture").empty();
            for (var i = 2; i < PCREck_result.length; ++i) {
              $("#PCREck_capture").append("  %" + (i-1) + " => " + PCREck_result[i] + "\n");
            }
          }
        });

        return false;
      };

      $(function() {
        var t = null;
        var pulse = 50;

        var refresh = function() {
          if (t) { clearTimeout(t); }
          t = setTimeout("test()", pulse);
        }

        $("#PCREck input, #PCREck textarea").keyup(function() {
          refresh();
        });
        $("#PCRE_options input[type=checkbox]").change(function() {
          refresh();
        })

        // append or remove a toggled pattern option into the pattern option box
        $("#PCRE_options input[type=checkbox]").change(function() {
          var el = $(this);
          var opts = $("#PCREck_pattern_options");
          var curr_opts = opts.attr("value");
          if (el.is(":checked")) {
            opts.attr("value", curr_opts + el.attr("value"));
          } else {
            opts.attr("value", opts.attr("value").replace(el.attr("value"), ""));
          }
        })

        // update the pattern options' :checked state when the user
        // manually writes options in the pattern option box
        $("#PCREck_pattern_options").keyup(function() {
          var opts = $(this).attr("value").split('');
          $("#PCRE_options input[type=checkbox]").attr("checked", null);
          $("#PCRE_options input[type=checkbox]").each(function() {
            var this_opt = $(this).attr("value");
            if (opts.indexOf(this_opt) != -1)
              $(this).attr("checked", "checked");
          });
        });

      });

    </script>

    <script type="text/javascript">

      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-15596792-3']);
      _gaq.push(['_setDomainName', 'pcreck.com']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();

    </script>    
  </head>
  <body>
    <header>
      <hgroup>
        <h1>PCRE<span style="color: orange">ck</span></h1>
      </hgroup>
      <p>
        PCREck is a <a href="http://www.pcre.org/pcre.txt">PCRE</a>
        regular expression editor and tester similar 
        to what <a href="http://www.rubular">Rubular</a> is
        for Ruby's regular expressions.
      </p>
    </header>
    <section id="PCREck">
      <div class="part spanner">
        <label for="PCREck_pattern">Your regular expression:</label>
        <div class="part left" style="width: 120px; margin-right: 0">
          <code>(?</code>
          <input type="text" id="PCREck_pattern_options"
            style="width: 70px; font-size: 12px"
            placeholder="imsxUX" value="" />
          <code>)</code>
        </div>
        <div class="part right" style="width: 840px; border-left: none">
          <input type="text" id="PCREck_pattern" autofocus="autofocus" value=""
          placeholder="^(banana)+s? (.*)$" />
        </div>
      </div>
      <div class="part left">
        <label for="PCREck_subject">Your test string:</label>
        <textarea id="PCREck_subject" placeholder="bananas in the car"></textarea>
      </div>
      
      <div class="part right">
        <label>
          Matches:
        </label>
        <pre id="PCREck_match">--</pre>
        <label>
          Captured subpatterns:
        </label>
        <pre id="PCREck_capture">--</pre>

      </div>

    </section>

    <section id="PCRE_options">
      <fieldset>
        <legend>PCRE Options</legend>
        <label title="makes matching case insensitive">
          <input type="checkbox" name="pcre[options]" value="i" />
          Caseless <code>/i</code>
        </label>
        <label title="captures will span line feeds">
          <input type="checkbox" name="pcre[options]" value="m" />
          Multi-line <code>/m</code>
        </label>
        <label title="makes .* match everything, including control characters">
          <input type="checkbox" name="pcre[options]" value="s" />
          Dot-ALL <code>/s</code>
        </label>
        <label>
          <input type="checkbox" name="pcre[options]" value="x" />
          Extended <code>/x</code>
        </label>
        <label>
          <input type="checkbox" name="pcre[options]" value="U" />
          Ungreedy <code>/U</code>
        </label>
        <label>
          <input type="checkbox" name="pcre[options]" value="X" />
          Extra <code>/X</code>
        </label>
      </fieldset>
    </section>

    <section class="part left">
      <h2>PCRE Characters</h2>

      <h3>Ranges</h3>
      <div class="">
        <table>
          <tbody>
            <tr>
              <td><code>.</code></td>
              <td>any single character</td>
            </tr>            
            <tr>
              <td><code>[abc]</code></td>
              <td>a single character of: a, b or c</td>
            </tr>
            <tr>
              <td><code>[^abc]</code></td>
              <td>any single character except: a, b, or c</td>
            </tr>
            <tr>
              <td><code>[a-z]</code></td>
              <td>any single character in the range a-z</td>
            </tr>
            <tr>
              <td><code>[a-zA-Z]</code></td>
              <td>any single character in the range a-z or A-Z</td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <h3>Assertions</h3>
      <div class="">
        <table>
          <tbody>
            <tr>
              <td><code>^</code></td>
              <td>start of line</td>
            </tr>
            <tr>
              <td><code>$</code></td>
              <td>end of line</td>
            </tr>
            <tr>
              <td><code>\b</code></td>
              <td>any word boundary character</td>
            </tr>
            <tr>
              <td><code>\B</code></td>
              <td>any non-word boundary character</td>
            </tr>            
            <tr>
              <td><code>\A</code></td>
              <td>start of string</td>
            </tr>
            <tr>
              <td><code>\z</code></td>
              <td>end of string</td>
            </tr>
          </tbody>
        </table>        
      </div>
    </section>


    <section class="part right">
      <h2>PCRE Controls</h2>
      <h3>Quantifiers</h3>
      <table>
        <tbody>
          <tr>
            <td><code>(a|b)</code></td>
            <td>a or b</td>
          </tr>
          <tr>
            <td><code>a?</code></td>
            <td>zero or one of a</td>
          </tr>
          <tr>
            <td><code>a*</code></td>
            <td>zero or more of a</td>
          </tr>
          <tr>
            <td><code>a+</code></td>
            <td>one or more of a</td>
          </tr>
          <tr>
            <td><code>a{3}</code></td>
            <td>exactly 3 of a</td>
          </tr>
          <tr>
            <td><code>a{3,}</code></td>
            <td>3 or more of a</td>
          </tr>
          <tr>
            <td><code>a{3,6}</code></td>
            <td>between 3 and 6 of a</td>
          </tr>        
        </tbody>
      </table>      
      <h3>Subpattern modifiers</h3>
      <table>
        <tbody>
          <tr>
            <!-- <td>Positive look-ahead</code></td> -->
            <td style="width: 160px"><code>foo(?=bar)</code></td>
            <td><code>foo</code> will match if it's followed by <code>bar</code></td>
          </tr>
          <tr>
            <!-- <td>Negative look-ahead</td> -->
            <td><code>foo(?!bar)</code></td>
            <td><code>foo</code> will match if it's not followed by <code>bar</code></td>
          </tr>
          <tr>
            <!-- <td>Positive look-behind</td> -->
            <td><code>(?&lt;=foo)bar</code></td>
            <td><code>bar</code> will match if it's preceded by <code>foo</code></td>
          </tr>
          <tr>
            <!-- <td>Negative look-behind</td> -->
            <td><code>(?&lt;!foo)bar</code></td>
            <td><code>bar</code> will match if there isn't a <code>foo</code> behind it</td>
          </tr>
          <tr>
            <!-- <td>Conditional subpatterns</td> -->
            <td><code>(foo)?(?(1)(bar))</code></td>
            <td><code>bar</code> will be captured only if <code>foo</code> was</td>
          </tr>

        </tbody>
      </table>

    </section>
    <section>
      <h2>PCRE Character Classes</h2>
        <div class="part left">
          <h3>Generic character types</h3>
          <table>
            <tbody>
              <tr>
                <td><code>\s</code></td>
                <td>any whitespace character</td>
              </tr>
              <tr>
                <td><code>\S</code></td>
                <td>any non-whitespace character</td>
              </tr>
              <tr>
                <td><code>\d</code></td>
                <td>any digit</td>
              </tr>
              <tr>
                <td><code>\D</code></td>
                <td>any non-digit</td>
              </tr>
              <tr>
                <td><code>\w</code></td>
                <td>any word character (letter, number, underscore)</td>
              </tr>
              <tr>
                <td><code>\W</code></td>
                <td>any non-word character</td>
              </tr>

           </tbody>
          </table>   

          <h3>POSIX Classes</h3>
          <table>
            <tbody>
              <tr>
                <td><code>[:alnum:]</code></td>
                <td>letters and digits</td>
              </tr>
              <tr>
                <td><code>[:alpha:]</code></td>
                <td>letters</td>
              </tr>
              <tr>
                <td><code>[:ascii:]</code></td>
                <td>character codes 0 - 127</td>
              </tr>
              <tr>
                <td><code>[:blank:]</code></td>
                <td>space or tab only</td>
              </tr>
              <tr>
                <td><code>[:cntrl:]</code></td>
                <td>control characters</td>
              </tr>
              <tr>
                <td><code>[:graph:]</code></td>
                <td>printing characters, excluding space</td>
              </tr>
              <tr>
                <td><code>[:print:]</code></td>
                <td>printing characters, excluding space</td>
              </tr>
              <tr>
                <td><code>[:punct:]</code></td>
                <td>printing characters, excluding letters and digits and spaces</td>
              </tr>
              <tr>
                <td><code>[:space:]</code></td>
                <td>white space (not quite the same as \s)</td>
              </tr>
              <tr>
                <td><code>[:xdigit:]</code></td>
                <td>hexadecimal digits</td>
              </tr>
            </tbody>
          </table>

               
        </div>
        <div class="part right">
          <h3>Usage examples</h3>
          <p>POSIX classes are supported only as sub-classes
            (<code>[]</code> define a class);
           to match hexadecimal digits
            along with the characters <code>%</code> and <code>}</code>:
          </p>
          <p><code>[%{[:xdigit:]]</code></p>
          <p>To negate a class, prefix the identifier with <code>^</code>:
          </p>
          <p><code>[%{[:^xdigit:]]</code></p>

        </div>
    </section>

    <section id="references">
      <h2>References</h2>
      <p>The PCRE cheat sheet was built from a number of sources to which
        the credit goes.</p>
      <ol>
        <li>
          <a href="http://www.pcre.org/pcre.txt">The PCRE manual</a>
          was used as the primary reference
        </li>
        <li><a href="http://www.rubular.com">Rubular</a>; some of the
          ranges, quantifiers, and assertions were snooped from there
          as they were compatible with PCRE
        </li>
        <li>One <a href="http://cheat-sheet.front.lv/wp-content/uploads/2006/08/pcre-php.png">PHP PCRE cheat sheet</a></li>
      </ol>

    </section>

    <footer>
      <small><a href="http://www.pcreck.com">PCREck</a> is free software.
        <a href="https://github.com/amireh/PCREck.git">Fork it</a> on Github,
        or pay its <a href="http://www.mxvt.net">author</a> a visit.
      </small>
    </footer>
  </body>
</html>